package com.qin.domain;
// Generated 2017-10-22 14:53:45 by Hibernate Tools 5.1.4.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.springframework.beans.factory.annotation.Autowired;

import com.qin.domain.MainPost;
import com.qin.domain.User;

/**
 * TTopic generated by hbm2java
 */
@Entity(name="Topic")
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
@Table(name = "t_topic" )
public class Topic implements java.io.Serializable {
	
	public static final int DIGEST_TOPIC = 1;//精华主题帖子	
	public static final int NOT_DIGEST_TOPIC = 0;//普通的主题帖子
	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "topic_id", unique = true, nullable = false)
	private Integer topicId;
	@Column(name = "board_id", nullable = false)
	private int boardId;
	@Column(name = "topic_title", nullable = false, length = 100)
	private String topicTitle;
	
	@Autowired
	@ManyToOne
	@JoinColumn(name = "user_id")
	private User user;
	
	@Transient
	private MainPost mainPost = new MainPost();
	@Temporal(TemporalType.DATE)
	@Column(name = "create_time", nullable = false, length = 10)
	private Date createTime;
	@Temporal(TemporalType.DATE)
	@Column(name = "last_post", nullable = false, length = 10)
	private Date lastPost;
	@Column(name = "topic_views", nullable = false)
	private int topicViews;
	@Column(name = "topic_replies", nullable = false)
	private int topicReplies;
	@Column(name = "digest", nullable = false)
	private int digest=NOT_DIGEST_TOPIC;

	public Topic() {
	}

	public Topic(int boardId, String topicTitle, User user, Date createTime, Date lastPost, int topicViews,
			int topicReplies, int digest) {
		this.boardId = boardId;
		this.topicTitle = topicTitle;
		this.user = user;
		this.createTime = createTime;
		this.lastPost = lastPost;
		this.topicViews = topicViews;
		this.topicReplies = topicReplies;
		this.digest = digest;
	}

	
	public Integer getTopicId() {
		return this.topicId;
	}

	public void setTopicId(Integer topicId) {
		this.topicId = topicId;
	}

	public int getBoardId() {
		return this.boardId;
	}

	public void setBoardId(int boardId) {
		this.boardId = boardId;
	}

	
	public String getTopicTitle() {
		return this.topicTitle;
	}

	public void setTopicTitle(String topicTitle) {
		this.topicTitle = topicTitle;
	}

	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}


	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	
	public Date getLastPost() {
		return this.lastPost;
	}

	public void setLastPost(Date lastPost) {
		this.lastPost = lastPost;
	}

	
	public int getTopicViews() {
		return this.topicViews;
	}

	public void setTopicViews(int topicViews) {
		this.topicViews = topicViews;
	}

	
	public int getTopicReplies() {
		return this.topicReplies;
	}

	public void setTopicReplies(int topicReplies) {
		this.topicReplies = topicReplies;
	}

	
	public int getDigest() {
		return this.digest;
	}

	public void setDigest(int digest) {
		this.digest = digest;
	}

	public MainPost getMainPost() {
		return mainPost;
	}

	public void setMainPost(MainPost mainPost) {
		this.mainPost = mainPost;
	}
	

	

}
